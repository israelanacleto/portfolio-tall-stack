version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    container_name: tall-stack-app
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes:
      - ./src:/var/www/html
      - app_storage:/var/www/html/storage
      - app_bootstrap_cache:/var/www/html/bootstrap/cache
      - ./docker/php/php.ini:/usr/local/etc/php/conf.d/99-app.ini
      - ./docker/php/opcache.ini:/usr/local/etc/php/conf.d/opcache.ini
    environment:
      - APP_ENV=local
      - APP_DEBUG=true
      - DB_CONNECTION=pgsql
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_DATABASE=tall_stack
      - DB_USERNAME=sail
      - DB_PASSWORD=password
      - REDIS_HOST=redis
      - REDIS_PASSWORD=null
      - REDIS_PORT=6379
      - MAIL_MAILER=smtp
      - MAIL_HOST=mailhog
      - MAIL_PORT=1025
      - MAIL_USERNAME=null
      - MAIL_PASSWORD=null
      - MAIL_ENCRYPTION=null
    depends_on:
      - postgres
      - redis
      - mailhog
    networks:
      - tall-stack

  postgres:
    image: postgres:15-alpine
    container_name: tall-stack-postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: tall_stack
      POSTGRES_USER: sail
      POSTGRES_PASSWORD: password
      POSTGRES_ROOT_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - tall-stack

  redis:
    image: redis:7-alpine
    container_name: tall-stack-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - tall-stack

  mailhog:
    image: mailhog/mailhog:latest
    container_name: tall-stack-mailhog
    restart: unless-stopped
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - tall-stack

  node:
    image: node:18-alpine
    container_name: tall-stack-node
    working_dir: /var/www/html
    volumes:
      - ./src:/var/www/html
    command: sh -c "npm install && npm run dev"
    ports:
      - "5173:5173"
    networks:
      - tall-stack
    profiles:
      - dev

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  app_storage:
    driver: local
  app_bootstrap_cache:
    driver: local

networks:
  tall-stack:
    driver: bridge